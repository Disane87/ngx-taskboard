var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/CardItem.html",[0,0.227,1,0.584]],["body/interfaces/CardItem.html",[0,0.377,1,0.971,2,1.268,3,1.268,4,1.268,5,0.811,6,1.935,7,1.268,8,1.519,9,4.476,10,2.571,11,1.685,12,1.723,13,2.571,14,2.571,15,1.685,16,1.823,17,1.118,18,0.083,19,1.749,20,1.224,21,1.022,22,1.022,23,1.564,24,0.058,25,0.069,26,0.058]],["title/interfaces/ClickEvent.html",[0,0.227,27,0.736]],["body/interfaces/ClickEvent.html",[0,0.203,1,0.729,2,0.52,3,0.52,4,0.52,5,0.333,7,0.52,8,0.816,11,0.52,12,1.14,15,0.52,16,1.705,17,0.522,18,0.086,19,0.52,20,0.811,21,0.811,22,1.179,23,1.006,24,0.024,25,0.037,26,0.024,27,0.919,28,0.793,29,1.528,30,1.528,31,1.242,32,1.564,33,1.007,34,1.564,35,1.739,36,3.325,37,1.564,38,2.185,39,1.564,40,2.096,41,0.52,42,0.997,43,0.997,44,0.997,45,0.997,46,0.997,47,0.997,48,1.245,49,0.793,50,0.793,51,0.793,52,0.997,53,0.793,54,0.997,55,1.528,56,0.52,57,0.997,58,0.793,59,0.793,60,0.793,61,0.793,62,2.171,63,1.536,64,1.528,65,0.793,66,1.882,67,0.793,68,2.366,69,1.245,70,1.89,71,2.171,72,2.232,73,1.245,74,0.811,75,1.564,76,1.245,77,1.006,78,1.739,79,1.245,80,1.245,81,1.739,82,1.245,83,2.005,84,1.245,85,2.4,86,1.245,87,1.406,88,0.793,89,0.793,90,1.528,91,1.739,92,1.89,93,0.793,94,0.793,95,0.793,96,0.793,97,1.006,98,1.006,99,1.536,100,1.536,101,0.793,102,0.793,103,1.245,104,0.997,105,0.997,106,2.096,107,0.997,108,0.793,109,0.793,110,2.87,111,0.793,112,0.793,113,0.793,114,0.793,115,0.793,116,0.641,117,0.793,118,0.793,119,0.793,120,1.621,121,1.564,122,1.882,123,2.185,124,1.564,125,1.89,126,1.89,127,0.997,128,0.997,129,0.997,130,1.245,131,1.89,132,1.245,133,0.793,134,0.997,135,0.793,136,1.245,137,0.793,138,1.564,139,1.245,140,0.793,141,0.997,142,0.793,143,1.564,144,0.997,145,1.536,146,1.536,147,0.793,148,1.93,149,0.793,150,0.997,151,1.245,152,0.997,153,0.641,154,1.245,155,0.793,156,0.793,157,0.793,158,0.793,159,0.793,160,0.793,161,1.006,162,0.793,163,0.793,164,1.536,165,0.793,166,2.634,167,0.793,168,1.242,169,1.245,170,0.641,171,0.641,172,0.793,173,2.005,174,0.997,175,0.997,176,2.519,177,0.997,178,0.997,179,0.997,180,0.997,181,0.997,182,0.997,183,0.997,184,0.997,185,0.997,186,0.997,187,3.204,188,1.564,189,2.185,190,1.564,191,1.93,192,0.997,193,0.997,194,1.739,195,0.997,196,0.997,197,1.564,198,0.997,199,0.997,200,0.997,201,0.997,202,1.564,203,0.997,204,1.564,205,0.997,206,0.997,207,0.997,208,0.997,209,1.564,210,1.755,211,1.564,212,1.93,213,1.93,214,1.564,215,1.93,216,2.634,217,3.185,218,0.997,219,0.997,220,0.997,221,0.997,222,1.93,223,0.997,224,0.997,225,0.997,226,0.997,227,0.997,228,0.997,229,0.997,230,2.185,231,0.997,232,0.997,233,1.564,234,0.997,235,0.997,236,0.997,237,1.93,238,0.997,239,1.93,240,0.997,241,0.52,242,0.997,243,1.564,244,0.997,245,0.997,246,1.564,247,1.245,248,0.997,249,0.997,250,0.997,251,0.997,252,0.997,253,0.997,254,0.997,255,0.997,256,1.564,257,0.997,258,0.997,259,0.997,260,1.564,261,0.997,262,0.997,263,0.997,264,0.997,265,0.997,266,0.997,267,0.997,268,1.564,269,0.997,270,0.997,271,0.997,272,0.997,273,1.564,274,1.564,275,0.997,276,1.564,277,0.997,278,0.997,279,0.997,280,1.564,281,1.564,282,1.564,283,0.997,284,0.997,285,0.997,286,2.185,287,2.185,288,0.997,289,0.997,290,0.997,291,0.997,292,0.997,293,2.634,294,2.374,295,1.564,296,1.564,297,1.93,298,0.997,299,0.997,300,2.374,301,2.185,302,0.997,303,0.997,304,0.997,305,0.997,306,0.997,307,1.564,308,1.564,309,1.564,310,1.93,311,0.997,312,0.997,313,2.185,314,0.997,315,0.997,316,0.997,317,1.564,318,0.997,319,0.997,320,0.997,321,1.93,322,0.997,323,0.997,324,0.997,325,0.997,326,0.997,327,0.997,328,0.997,329,1.564]],["title/interfaces/CollapseState.html",[0,0.227,21,0.736]],["body/interfaces/CollapseState.html",[0,0.389,1,0.855,2,1.336,3,1.336,4,1.336,5,0.855,6,2.039,7,1.336,8,1.567,10,2.039,11,1.336,12,1.747,13,2.039,14,2.039,15,1.336,16,1.786,17,1.002,18,0.082,19,1.567,20,1.262,21,1.262,22,1.381,23,2.05,24,0.061,25,0.071,26,0.061]],["title/interfaces/GroupKeys.html",[0,0.227,210,1.127]],["body/interfaces/GroupKeys.html",[0,0.203,1,0.729,2,0.52,3,0.52,4,0.52,5,0.333,7,0.52,8,0.816,11,0.52,12,1.14,15,0.52,16,1.705,17,0.522,18,0.086,19,0.52,20,0.811,21,0.811,22,1.179,23,1.006,24,0.024,25,0.037,26,0.024,27,0.811,28,0.793,29,1.006,30,1.006,31,1.242,32,1.564,33,1.007,34,1.564,35,1.739,36,3.325,37,1.564,38,2.185,39,1.564,40,2.096,41,0.52,42,0.997,43,0.997,44,0.997,45,0.997,46,0.997,47,0.997,48,1.245,49,0.793,50,0.793,51,0.793,52,0.997,53,0.793,54,0.997,55,1.528,56,0.52,57,0.997,58,0.793,59,0.793,60,0.793,61,0.793,62,2.171,63,1.536,64,1.528,65,0.793,66,1.882,67,0.793,68,2.366,69,1.245,70,1.89,71,2.171,72,2.232,73,1.245,74,0.811,75,1.564,76,1.245,77,1.006,78,1.739,79,1.245,80,1.245,81,1.739,82,1.245,83,2.005,84,1.245,85,2.4,86,1.245,87,1.406,88,0.793,89,0.793,90,1.528,91,1.739,92,1.89,93,0.793,94,0.793,95,0.793,96,0.793,97,1.006,98,1.006,99,2.005,100,2.005,101,0.793,102,0.793,103,1.245,104,0.997,105,0.997,106,2.096,107,0.997,108,0.793,109,0.793,110,2.87,111,0.793,112,0.793,113,0.793,114,0.793,115,0.793,116,0.641,117,0.793,118,0.793,119,0.793,120,1.621,121,1.564,122,1.882,123,2.185,124,1.564,125,1.89,126,1.89,127,0.997,128,0.997,129,0.997,130,1.245,131,1.89,132,1.245,133,0.793,134,0.997,135,0.793,136,1.245,137,0.793,138,1.564,139,1.245,140,0.793,141,0.997,142,0.793,143,1.564,144,0.997,145,1.536,146,1.536,147,0.793,148,1.93,149,0.793,150,0.997,151,1.245,152,0.997,153,0.641,154,1.245,155,0.793,156,0.793,157,0.793,158,0.793,159,0.793,160,0.793,161,1.006,162,0.793,163,0.793,164,1.536,165,0.793,166,2.634,167,0.793,168,1.242,169,1.245,170,0.641,171,0.641,172,0.793,173,2.005,174,0.997,175,0.997,176,2.519,177,0.997,178,0.997,179,0.997,180,0.997,181,0.997,182,0.997,183,0.997,184,0.997,185,0.997,186,0.997,187,3.204,188,1.564,189,2.185,190,1.564,191,1.93,192,0.997,193,0.997,194,1.739,195,0.997,196,0.997,197,1.564,198,0.997,199,0.997,200,0.997,201,0.997,202,1.564,203,0.997,204,1.564,205,0.997,206,0.997,207,0.997,208,0.997,209,1.564,210,1.805,211,1.564,212,1.93,213,1.93,214,1.564,215,1.93,216,2.634,217,3.185,218,0.997,219,0.997,220,0.997,221,0.997,222,1.93,223,0.997,224,0.997,225,0.997,226,0.997,227,0.997,228,0.997,229,0.997,230,2.185,231,0.997,232,0.997,233,1.564,234,0.997,235,0.997,236,0.997,237,1.93,238,0.997,239,1.93,240,0.997,241,0.52,242,0.997,243,1.564,244,0.997,245,0.997,246,1.564,247,1.245,248,0.997,249,0.997,250,0.997,251,0.997,252,0.997,253,0.997,254,0.997,255,0.997,256,1.564,257,0.997,258,0.997,259,0.997,260,1.564,261,0.997,262,0.997,263,0.997,264,0.997,265,0.997,266,0.997,267,0.997,268,1.564,269,0.997,270,0.997,271,0.997,272,0.997,273,1.564,274,1.564,275,0.997,276,1.564,277,0.997,278,0.997,279,0.997,280,1.564,281,1.564,282,1.564,283,0.997,284,0.997,285,0.997,286,2.185,287,2.185,288,0.997,289,0.997,290,0.997,291,0.997,292,0.997,293,2.634,294,2.374,295,1.564,296,1.564,297,1.93,298,0.997,299,0.997,300,2.374,301,2.185,302,0.997,303,0.997,304,0.997,305,0.997,306,0.997,307,1.564,308,1.564,309,1.564,310,1.93,311,0.997,312,0.997,313,2.185,314,0.997,315,0.997,316,0.997,317,1.564,318,0.997,319,0.997,320,0.997,321,1.93,322,0.997,323,0.997,324,0.997,325,0.997,326,0.997,327,0.997,328,0.997,329,1.564]],["title/modules/NgxTaskboardModule.html",[330,1.394,331,0.914]],["body/modules/NgxTaskboardModule.html",[3,1.223,4,1.223,5,0.782,18,0.084,20,0.986,24,0.056,25,0.068,26,0.056,31,2.185,41,1.223,55,1.509,56,1.81,74,0.986,330,1.866,331,1.755,332,1.866,333,1.223,334,2.345,335,2.442,336,1.866,337,1.866,338,3.068,339,2.345,340,2.345,341,2.345,342,2.848,343,2.345,344,3.072,345,3.072,346,2.848,347,2.848,348,2.345,349,1.866,350,3.072,351,3.731,352,3.731,353,3.072,354,2.345,355,3.072,356,3.191,357,3.072,358,3.731,359,4.018,360,3.072,361,4.018,362,3.731,363,3.072,364,3.072,365,3.072,366,3.072,367,2.345]],["title/changelog.html",[368,1.175,369,1.175,370,1.476]],["body/changelog.html",[5,0.63,17,0.926,18,0.07,22,0.794,24,0.045,25,0.059,26,0.045,27,0.794,29,1.216,30,1.216,64,1.216,66,1.599,77,1.216,87,1.216,90,1.216,97,1.216,98,1.216,116,1.216,120,1.216,122,1.216,140,1.504,161,1.216,171,1.216,241,1.296,247,1.504,370,2.776,371,2.474,372,3.862,373,1.889,374,2.474,375,2.474,376,2.474,377,2.474,378,3.254,379,2.474,380,1.977,381,2.474,382,2.474,383,2.474,384,2.474,385,2.474,386,4.507,387,3.441,388,2.474,389,2.474,390,2.474,391,3.254,392,2.474,393,2.474,394,2.474,395,3.254,396,2.474,397,2.474,398,2.474,399,3.254,400,2.474,401,1.889,402,3.254,403,3.254,404,2.474,405,4.119,406,2.474,407,2.474,408,4.542,409,2.474,410,2.474,411,1.889,412,2.474,413,2.474,414,3.254,415,2.474,416,1.889,417,1.889,418,2.474,419,2.474,420,2.474,421,2.474,422,2.474,423,2.474,424,2.474,425,2.474,426,3.636,427,2.474,428,2.474,429,2.474,430,2.474,431,3.636,432,2.484,433,2.474,434,2.474,435,2.474,436,2.474,437,2.474,438,2.474,439,2.474,440,2.474,441,2.474,442,2.474,443,2.474,444,2.474,445,2.474,446,2.474,447,2.474,448,2.474,449,3.254,450,2.474,451,2.474,452,4.437,453,2.474,454,2.474,455,2.474,456,2.474,457,2.474,458,2.474,459,2.474,460,3.254,461,2.474,462,2.474,463,2.474,464,2.474,465,2.474,466,2.474,467,2.474,468,2.474,469,2.474,470,2.474,471,2.474,472,2.474,473,2.474,474,2.474,475,1.889,476,2.474,477,2.474,478,2.474,479,2.474,480,2.474,481,2.474,482,2.474,483,2.474,484,2.474,485,2.474,486,2.474,487,2.474,488,2.474,489,2.474,490,3.254,491,2.474,492,2.474,493,2.474,494,2.474,495,1.889,496,2.474,497,1.889,498,2.474,499,2.474,500,1.889,501,1.504,502,2.474,503,2.474,504,2.474,505,4.013,506,4.013,507,2.474,508,2.474,509,2.474,510,2.949,511,1.504,512,2.474,513,2.474,514,2.474,515,2.474,516,2.474,517,2.474,518,2.474,519,2.474,520,2.474,521,2.474,522,3.254,523,2.474,524,2.474,525,2.474,526,2.474,527,2.474,528,2.474,529,2.474]],["title/coverage.html",[530,2.362]],["body/coverage.html",[0,0.428,1,0.868,5,0.868,6,2.411,17,0.868,18,0.082,21,1.093,24,0.062,25,0.072,26,0.062,27,1.093,28,2.551,33,1.357,56,1.357,168,1.673,194,2.627,210,1.673,380,2.07,530,2.6,531,3.406,532,3.406,533,3.406,534,3.406,535,4.198,536,3.406,537,3.406,538,2.6]],["title/dependencies.html",[333,1.095,539,1.476]],["body/dependencies.html",[18,0.08,24,0.065,25,0.074,26,0.065,41,1.423,333,1.423,540,3.573,541,3.573,542,4.079]],["title/index.html",[7,0.77,368,1.175,369,1.175]],["body/index.html",[0,0.317,1,0.917,8,0.556,10,2.108,11,1.382,12,1.54,13,2.108,14,2.149,15,1.494,16,1.631,17,0.55,18,0.085,19,1.278,20,1.089,22,0.953,24,0.015,25,0.025,26,0.015,27,1.217,29,1.19,30,1.19,31,1.19,33,0.556,35,2.405,40,2.062,41,0.556,48,0.497,49,0.849,50,1.95,51,0.497,53,0.497,55,1.577,58,1.312,59,1.312,60,1.312,61,1.312,62,1.312,63,1.804,64,1.667,65,1.312,66,1.82,67,1.312,68,2.22,69,1.804,70,2.22,71,2.51,72,2.405,73,1.804,74,1.089,76,1.804,77,1.458,78,2.22,79,1.804,80,1.804,81,1.804,82,1.804,83,2.328,84,1.804,85,2.624,86,1.804,87,1.795,88,1.472,89,1.472,90,2.012,91,2.22,92,2.22,93,1.312,94,1.312,95,1.312,96,1.312,97,1.458,98,1.458,99,1.472,100,1.472,101,1.312,102,1.312,103,1.472,106,1.804,108,1.312,109,1.312,111,1.882,112,1.312,113,1.312,114,1.312,115,1.312,116,1.061,117,1.312,118,1.312,119,1.312,120,1.458,122,1.795,125,1.804,126,2.279,130,1.312,131,2.22,132,1.312,133,1.312,135,1.312,136,1.804,137,1.312,139,1.312,142,0.497,145,2.062,146,1.804,147,1.312,149,1.312,151,1.804,153,1.061,154,1.472,155,1.312,156,1.312,157,1.312,158,1.312,159,1.312,160,1.312,161,1.458,162,1.312,163,1.312,164,2.062,165,1.312,167,1.312,168,1.667,169,1.804,170,1.061,171,1.061,172,1.312,173,1.603,241,0.965,331,0.556,333,0.556,335,0.497,336,1.11,337,0.497,346,1.066,347,1.066,348,0.625,349,0.497,354,2.45,367,0.625,373,2.747,401,0.625,411,2.45,416,2.45,417,1.85,432,0.625,475,0.625,497,1.395,501,1.472,510,0.625,538,0.625,539,2.45,543,0.819,544,0.819,545,0.819,546,0.819,547,0.625,548,0.819,549,1.397,550,0.819,551,0.819,552,0.819,553,0.819,554,0.819,555,0.819,556,0.819,557,0.819,558,0.819,559,0.819,560,0.819,561,0.819,562,0.819,563,0.819,564,2.639,565,3.393,566,1.397,567,1.397,568,1.397,569,3.209,570,3.209,571,3.209,572,3.654,573,4.01,574,0.819,575,2.818,576,0.819,577,2.159,578,0.819,579,0.819,580,1.397,581,0.819,582,0.819,583,0.819,584,0.819,585,0.819,586,0.819,587,2.159,588,1.648,589,1.397,590,0.819,591,0.819,592,0.819,593,1.827,594,1.397,595,0.819,596,0.819,597,0.819,598,1.397,599,0.819,600,0.819,601,0.819,602,0.819,603,0.819,604,0.819,605,0.819,606,0.819,607,1.397,608,1.397,609,0.819,610,0.819,611,0.819,612,0.819,613,0.819,614,0.819,615,2.818,616,0.819,617,2.159,618,1.85,619,2.423,620,2.423,621,2.423,622,2.423,623,3.831,624,3.209,625,3.209,626,3.209,627,2.423,628,2.423,629,2.423,630,3.209,631,3.599,632,2.423,633,2.423,634,3.985,635,2.423,636,2.423,637,3.209,638,2.423,639,2.423,640,2.423,641,2.423,642,2.423,643,2.423,644,2.423,645,1.85,646,2.423,647,2.423,648,1.85,649,2.423,650,2.423,651,2.423,652,2.423,653,2.423,654,3.209,655,2.423,656,2.423,657,2.423,658,2.423,659,2.423,660,2.969,661,2.969,662,2.159,663,2.969]],["title/license.html",[368,1.175,369,1.175,511,1.175]],["body/license.html",[18,0.069,24,0.057,25,0.069,26,0.057,74,1.011,153,1.861,170,1.547,380,1.913,387,2.404,495,2.404,500,2.404,511,1.913,547,2.404,588,2.404,618,2.404,645,2.404,648,2.404,664,3.149,665,4.062,666,3.149,667,3.149,668,3.787,669,3.149,670,3.149,671,3.149,672,3.149,673,3.787,674,4.497,675,3.149,676,3.149,677,3.149,678,4.062,679,3.149,680,3.787,681,3.149,682,3.149,683,3.149,684,3.149,685,3.149,686,3.149,687,3.149,688,3.149,689,3.787,690,3.149,691,3.149,692,3.149,693,3.149,694,3.149,695,3.787,696,3.787,697,3.149,698,3.149,699,3.149,700,3.149,701,3.149,702,3.149,703,3.149,704,3.149,705,3.149,706,3.149,707,3.149,708,3.149,709,3.149,710,3.149,711,3.149,712,3.149,713,3.149,714,3.149,715,3.149,716,3.149,717,3.149,718,3.149,719,3.149,720,3.149,721,3.149,722,3.149,723,3.149,724,3.149]],["title/modules.html",[332,1.88]],["body/modules.html",[18,0.074,24,0.065,25,0.074,26,0.065,331,1.428,332,2.178,349,2.178,356,2.737,725,3.585,726,3.585]],["title/overview.html",[727,2.362]],["body/overview.html",[2,1.365,18,0.079,24,0.062,25,0.072,26,0.062,33,1.365,56,1.793,74,1.1,241,1.586,330,2.419,331,1.757,333,1.365,334,2.616,335,2.082,336,2.082,337,2.082,338,2.616,339,2.616,340,2.616,341,2.616,342,3.04,343,2.616,501,2.082,727,2.616]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":194,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{}}}],["0/3",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["061fa49",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":241,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["1.0.10",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["1.0.12",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["1.0.13",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["1.0.14",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["1.0.17",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["1.0.18",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["1.0.20",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["1.0.21",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["1.0.22",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["1.0.25",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["1.0.26",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["1.0.27",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["1.0.7",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["1.0.8",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["1.0.9",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":154,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["11",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["111650d",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["18e23e9",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["1c05628",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":323,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["2",{"_index":589,"title":{},"body":{"index.html":{}}}],["2019",{"_index":387,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["201e953",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["209ab7",{"_index":603,"title":{},"body":{"index.html":{}}}],["22f5731",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["2424838",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["2586d8d",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["29aa82",{"_index":597,"title":{},"body":{"index.html":{}}}],["2b3ab28",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["2d82c4f",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["2e88d6b",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["2f6a23e",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":497,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["31/54",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["3d8ec21",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":501,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["5",{"_index":401,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["50px",{"_index":328,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["52403b9",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["58768bc",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["64b9079",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["6a6d5a0",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["6bb6d60",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":475,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["7.2.0",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["71dd8f",{"_index":592,"title":{},"body":{"index.html":{}}}],["75fc3ac",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["78d3ac3",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["7b81695",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["7e69774",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["8153e4f",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["82bf483",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["8900b92",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["92df858",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["9579042",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["99c15c0",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["9c24376",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["a0214b1",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["a7e2165",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["a[this.sortby",{"_index":238,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["ability",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":648,"title":{},"body":{"index.html":{},"license.html":{}}}],["access",{"_index":638,"title":{},"body":{"index.html":{}}}],["action",{"_index":170,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{},"license.html":{}}}],["actions",{"_index":135,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["actionstemplate",{"_index":137,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["actually",{"_index":621,"title":{},"body":{"index.html":{}}}],["add",{"_index":90,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["added",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["addes",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["additions",{"_index":558,"title":{},"body":{"index.html":{}}}],["afield",{"_index":237,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["aligned",{"_index":156,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["allow",{"_index":159,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["and/or",{"_index":687,"title":{},"body":{"license.html":{}}}],["angular",{"_index":572,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":41,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/core/src/linker/component_factory_resolver",{"_index":43,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["angular/platform",{"_index":348,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["another",{"_index":641,"title":{},"body":{"index.html":{}}}],["app",{"_index":582,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":578,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":580,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":584,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":581,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":576,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":577,"title":{},"body":{"index.html":{}}}],["application",{"_index":630,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":579,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":208,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["arising",{"_index":722,"title":{},"body":{"license.html":{}}}],["arr",{"_index":269,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["arr.indexof(elem",{"_index":270,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["array",{"_index":68,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["array).map((item",{"_index":264,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["associated",{"_index":675,"title":{},"body":{"license.html":{}}}],["august",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":712,"title":{},"body":{"license.html":{}}}],["auto",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":236,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["b3f7dd",{"_index":606,"title":{},"body":{"index.html":{}}}],["b4ade5",{"_index":614,"title":{},"body":{"index.html":{}}}],["b8c7df8",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["b[this.sortby",{"_index":240,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["backlog",{"_index":63,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["backlogname",{"_index":65,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["basic",{"_index":566,"title":{},"body":{"index.html":{}}}],["between",{"_index":105,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["bfield",{"_index":239,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["birthday",{"_index":612,"title":{},"body":{"index.html":{}}}],["bit",{"_index":650,"title":{},"body":{"index.html":{}}}],["blacklog",{"_index":59,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["board",{"_index":104,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["board.component.html",{"_index":52,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["board.component.scss",{"_index":54,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["board/board.component",{"_index":350,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["boardcomponent",{"_index":56,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"coverage.html":{},"overview.html":{}}}],["boardname",{"_index":107,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["boil",{"_index":601,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":23,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{}}}],["bootstrap",{"_index":336,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":322,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["branch",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["brands",{"_index":360,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["browse",{"_index":726,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":349,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":347,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["bug",{"_index":432,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bugs",{"_index":596,"title":{},"body":{"index.html":{}}}],["build",{"_index":416,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bumping",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["buttons",{"_index":91,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["c",{"_index":666,"title":{},"body":{"license.html":{}}}],["c26b313",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["c663cab",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":590,"title":{},"body":{"index.html":{}}}],["can't",{"_index":111,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["card",{"_index":148,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["carditem",{"_index":1,"title":{"interfaces/CardItem.html":{}},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{},"index.html":{}}}],["case",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":75,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["cayman",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":184,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["cell",{"_index":143,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["celladdnewitems",{"_index":96,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["cellclass",{"_index":150,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["cells",{"_index":95,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["changed",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["changedetectorref",{"_index":32,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["changelog",{"_index":370,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":671,"title":{},"body":{"license.html":{}}}],["claim",{"_index":715,"title":{},"body":{"license.html":{}}}],["class",{"_index":55,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["click",{"_index":171,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["clickevent",{"_index":27,"title":{"interfaces/ClickEvent.html":{}},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["clone",{"_index":624,"title":{},"body":{"index.html":{}}}],["cluster_ngxtaskboardmodule",{"_index":339,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}],["cluster_ngxtaskboardmodule_declarations",{"_index":340,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}],["cluster_ngxtaskboardmodule_exports",{"_index":341,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}],["cname",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["codegencomponentfactoryresolver",{"_index":42,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["collapse",{"_index":136,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["collapsed",{"_index":22,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["collapser",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["collapsestate",{"_index":21,"title":{"interfaces/CollapseState.html":{}},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{}}}],["collapsestate(part",{"_index":284,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["collapsestates",{"_index":177,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["color",{"_index":10,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/CollapseState.html":{},"index.html":{}}}],["column",{"_index":92,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["columns",{"_index":71,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["command",{"_index":642,"title":{},"body":{"index.html":{}}}],["commit",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["compatible",{"_index":562,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":33,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["conditions",{"_index":694,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":568,"title":{},"body":{"index.html":{}}}],["connection",{"_index":723,"title":{},"body":{"license.html":{}}}],["console.log(\"toggle",{"_index":283,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["console.log('getitemsofgroup",{"_index":207,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["const",{"_index":187,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["constructor(private",{"_index":181,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["content",{"_index":563,"title":{},"body":{"index.html":{}}}],["contract",{"_index":719,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":548,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":411,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":689,"title":{},"body":{"license.html":{}}}],["copy",{"_index":673,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":665,"title":{},"body":{"license.html":{}}}],["core",{"_index":357,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["correct",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":128,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["coverage",{"_index":530,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":510,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["created",{"_index":649,"title":{},"body":{"index.html":{}}}],["createelement(group",{"_index":290,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["createplaceholderelement(id",{"_index":316,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["creates",{"_index":635,"title":{},"body":{"index.html":{}}}],["css",{"_index":146,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["current",{"_index":131,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["currentdragzone",{"_index":180,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["custom",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["customer",{"_index":591,"title":{},"body":{"index.html":{}}}],["d32ca30",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["d3c1252",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["daf6196",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":716,"title":{},"body":{"license.html":{}}}],["dashed",{"_index":324,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["data",{"_index":81,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["data.if",{"_index":661,"title":{},"body":{"index.html":{}}}],["datatype",{"_index":228,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["datatypes",{"_index":570,"title":{},"body":{"index.html":{}}}],["dates",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["dba429e",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":677,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":724,"title":{},"body":{"license.html":{}}}],["debugger",{"_index":254,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["declarations",{"_index":335,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{},"overview.html":{}}}],["decrease",{"_index":115,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["default",{"_index":145,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["dependencies",{"_index":333,"title":{"dependencies.html":{}},"body":{"modules/NgxTaskboardModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":564,"title":{},"body":{"index.html":{}}}],["detect",{"_index":227,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["determinecorrectgroupkeys(item",{"_index":255,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["determined",{"_index":73,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["dev",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":246,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["disane/ngx",{"_index":575,"title":{},"body":{"index.html":{}}}],["display",{"_index":67,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["displayed",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":685,"title":{},"body":{"license.html":{}}}],["doc",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["doc(documentation",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["document.getelementbyid(this.currentdragzone",{"_index":311,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["documentation",{"_index":380,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["documenting",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["doggo",{"_index":605,"title":{},"body":{"index.html":{}}}],["don't",{"_index":76,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["done",{"_index":607,"title":{},"body":{"index.html":{}}}],["draged",{"_index":141,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["dragend(event",{"_index":289,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["dragevent",{"_index":286,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["dragging",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["dragitem",{"_index":178,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["dragover(event",{"_index":306,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["dragoverplaceholdertemplate",{"_index":144,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["drags",{"_index":165,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["dragstart(event",{"_index":285,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["dragstarted",{"_index":167,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["dragzone",{"_index":307,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["drop(event",{"_index":292,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["dropped",{"_index":169,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["e14a2f",{"_index":600,"title":{},"body":{"index.html":{}}}],["e6c0ac2",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["ea6562",{"_index":611,"title":{},"body":{"index.html":{}}}],["ef4bfe0",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["elem",{"_index":271,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["element",{"_index":139,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["elementcreateclick",{"_index":172,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["elementref",{"_index":34,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["elref",{"_index":183,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["emtpy",{"_index":84,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["evaluate",{"_index":585,"title":{},"body":{"index.html":{}}}],["event",{"_index":500,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["event.currenttarget",{"_index":296,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["event.preventdefault",{"_index":295,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["eventemitter",{"_index":35,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["events",{"_index":569,"title":{},"body":{"index.html":{}}}],["examples",{"_index":126,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["existing",{"_index":655,"title":{},"body":{"index.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["exports",{"_index":338,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}],["express",{"_index":703,"title":{},"body":{"license.html":{}}}],["f497b37",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["fa092a2",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["fab",{"_index":358,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["false",{"_index":110,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["far",{"_index":362,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["fas",{"_index":364,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["fb3064",{"_index":586,"title":{},"body":{"index.html":{}}}],["fc2c6ab",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["fda1f2d",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["feedback",{"_index":551,"title":{},"body":{"index.html":{}}}],["feel",{"_index":546,"title":{},"body":{"index.html":{}}}],["field",{"_index":229,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["fieldtype",{"_index":230,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":676,"title":{},"body":{"license.html":{}}}],["fill",{"_index":158,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["fired",{"_index":164,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["fitness",{"_index":708,"title":{},"body":{"license.html":{}}}],["fix",{"_index":595,"title":{},"body":{"index.html":{}}}],["fix(backlog",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["flex/flex",{"_index":157,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["following",{"_index":618,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":117,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["fontawesome",{"_index":351,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["fontawesomemodule",{"_index":352,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["fortawesome/angular",{"_index":353,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["fortawesome/fontawesome",{"_index":355,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["fortawesome/free",{"_index":359,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["found",{"_index":555,"title":{},"body":{"index.html":{}}}],["franke",{"_index":667,"title":{},"body":{"license.html":{}}}],["free",{"_index":547,"title":{},"body":{"index.html":{},"license.html":{}}}],["furnished",{"_index":692,"title":{},"body":{"license.html":{}}}],["generate",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":140,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{}}}],["getcaseinsensitivepropkey(item",{"_index":257,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["getheadings(groupkey",{"_index":262,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["getitemsofgroup(vvalue",{"_index":205,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["getting",{"_index":368,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getungroupeditems",{"_index":272,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["gif",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["git",{"_index":623,"title":{},"body":{"index.html":{}}}],["gitignore",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":637,"title":{},"body":{"index.html":{}}}],["granted",{"_index":670,"title":{},"body":{"license.html":{}}}],["gray",{"_index":325,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["group",{"_index":98,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["group.hgroup",{"_index":277,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["group.vgroup",{"_index":278,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["grouped",{"_index":112,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["grouping",{"_index":69,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["groupkey.tolowercase",{"_index":266,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["groupkeys",{"_index":210,"title":{"interfaces/GroupKeys.html":{}},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{}}}],["groupkeystotoggle",{"_index":244,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["groupkeystotoggle.foreach(item",{"_index":251,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["groupkeystotoggle.length",{"_index":253,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["groupname",{"_index":132,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["groups",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["guidance",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["haddnewitems",{"_index":93,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["hcollapsed",{"_index":163,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["head",{"_index":552,"title":{},"body":{"index.html":{}}}],["header",{"_index":106,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["headers",{"_index":130,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["headings",{"_index":78,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["height",{"_index":327,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["here",{"_index":654,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":669,"title":{},"body":{"license.html":{}}}],["hgkey",{"_index":190,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["hgroup",{"_index":29,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["hgroupkey",{"_index":100,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["hgroupkeys",{"_index":88,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["hheaderclass",{"_index":149,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["hheadertemplate",{"_index":133,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["hheadings",{"_index":174,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["hitem",{"_index":214,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["hitem).tolowercase",{"_index":220,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["holders",{"_index":713,"title":{},"body":{"license.html":{}}}],["hrow",{"_index":294,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["hrow.replace",{"_index":308,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["htmlelement",{"_index":317,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["htmlelement).queryselector('.placeholder",{"_index":298,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["https://github.com/disane87/ngx",{"_index":625,"title":{},"body":{"index.html":{}}}],["hvalue",{"_index":206,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["hvalue.tolowercase",{"_index":221,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["i.tolowercase",{"_index":249,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["icon",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":361,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["id",{"_index":11,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["identifier",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["implemention",{"_index":543,"title":{},"body":{"index.html":{}}}],["implements",{"_index":57,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["implied",{"_index":704,"title":{},"body":{"license.html":{}}}],["import",{"_index":31,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["important",{"_index":550,"title":{},"body":{"index.html":{}}}],["imports",{"_index":367,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["included",{"_index":697,"title":{},"body":{"license.html":{}}}],["including",{"_index":680,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{}}}],["index.html",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{}}}],["init",{"_index":161,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["input",{"_index":36,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["inputs/outputs",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["insenstive",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":574,"title":{},"body":{"index.html":{}}}],["installation",{"_index":565,"title":{},"body":{"index.html":{}}}],["instead",{"_index":631,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{}},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"overview.html":{}}}],["invert",{"_index":108,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["invertgroupdirection",{"_index":109,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["issues",{"_index":553,"title":{},"body":{"index.html":{}}}],["ist",{"_index":124,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["isungrouped",{"_index":273,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["it's",{"_index":561,"title":{},"body":{"index.html":{}}}],["item",{"_index":122,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["item.collapsed",{"_index":252,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["item.name",{"_index":281,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["item.name.tolowercase",{"_index":250,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["item[groupkeys.hgroupkey",{"_index":215,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["item[groupkeys.vgroupkey",{"_index":213,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["item[object.keys(item).find(key",{"_index":265,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["item[this.hgroupkey",{"_index":225,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["item[this.vgroupkey",{"_index":224,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["items",{"_index":66,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["items)caution",{"_index":660,"title":{},"body":{"index.html":{}}}],["items.filter(item",{"_index":223,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["items.some(item",{"_index":232,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["items.sort((a",{"_index":235,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["items[0][this.sortby",{"_index":233,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["itemtemplate",{"_index":127,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["jamie",{"_index":594,"title":{},"body":{"index.html":{}}}],["jekyll",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":97,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["key.tolowercase",{"_index":260,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["keys",{"_index":70,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["keys.filter((elem",{"_index":267,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["kind",{"_index":702,"title":{},"body":{"license.html":{}}}],["lastplaceholder",{"_index":310,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["leave",{"_index":549,"title":{},"body":{"index.html":{}}}],["left",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":334,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}],["liability",{"_index":717,"title":{},"body":{"license.html":{}}}],["liable",{"_index":714,"title":{},"body":{"license.html":{}}}],["library",{"_index":354,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["library.add(fas",{"_index":366,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["license",{"_index":511,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{}}}],["limitation",{"_index":681,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":571,"title":{},"body":{"index.html":{}}}],["limited",{"_index":705,"title":{},"body":{"license.html":{}}}],["line",{"_index":47,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["link",{"_index":634,"title":{},"body":{"index.html":{}}}],["linting",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["made",{"_index":560,"title":{},"body":{"index.html":{}}}],["malian",{"_index":598,"title":{},"body":{"index.html":{}}}],["manually",{"_index":79,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["marco",{"_index":588,"title":{},"body":{"index.html":{},"license.html":{}}}],["master",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":25,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["means",{"_index":644,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":707,"title":{},"body":{"license.html":{}}}],["merge",{"_index":495,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mit",{"_index":664,"title":{},"body":{"license.html":{}}}],["modify",{"_index":683,"title":{},"body":{"license.html":{}}}],["module",{"_index":330,"title":{"modules/NgxTaskboardModule.html":{}},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}],["modules",{"_index":332,"title":{"modules.html":{}},"body":{"modules/NgxTaskboardModule.html":{},"modules.html":{}}}],["more",{"_index":653,"title":{},"body":{"index.html":{}}}],["n",{"_index":663,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["natalie",{"_index":616,"title":{},"body":{"index.html":{}}}],["need",{"_index":545,"title":{},"body":{"index.html":{}}}],["new",{"_index":168,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":46,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["ng",{"_index":632,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":346,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{}}}],["ngoninit",{"_index":185,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["ngx",{"_index":49,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["ngxtaskboardmodule",{"_index":331,"title":{"modules/NgxTaskboardModule.html":{}},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["noelementstemplate",{"_index":129,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["noninfringement",{"_index":711,"title":{},"body":{"license.html":{}}}],["normal",{"_index":629,"title":{},"body":{"index.html":{}}}],["notable",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":695,"title":{},"body":{"license.html":{}}}],["now",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":573,"title":{},"body":{"index.html":{}}}],["null",{"_index":274,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["null)[this.sortby",{"_index":234,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["object",{"_index":123,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["object.keys(item).find(key",{"_index":259,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["obtaining",{"_index":645,"title":{},"body":{"index.html":{},"license.html":{}}}],["odd",{"_index":651,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":37,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["onit",{"_index":60,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["open",{"_index":587,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/CardItem.html":{}}}],["otherwise",{"_index":721,"title":{},"body":{"license.html":{}}}],["out",{"_index":74,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":38,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["over",{"_index":142,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["overall",{"_index":116,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["overview",{"_index":727,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":539,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["parent",{"_index":155,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["part",{"_index":276,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["part).collapsed",{"_index":282,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["particular",{"_index":709,"title":{},"body":{"license.html":{}}}],["pass",{"_index":77,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["passed",{"_index":72,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["peer",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":668,"title":{},"body":{"license.html":{}}}],["permit",{"_index":690,"title":{},"body":{"license.html":{}}}],["person",{"_index":672,"title":{},"body":{"license.html":{}}}],["persons",{"_index":691,"title":{},"body":{"license.html":{}}}],["placeholder",{"_index":138,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["placeholderel",{"_index":297,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["placeholderelement",{"_index":313,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["placeholderset",{"_index":179,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["please",{"_index":86,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["portions",{"_index":699,"title":{},"body":{"license.html":{}}}],["pos",{"_index":268,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["possible",{"_index":622,"title":{},"body":{"index.html":{}}}],["pr",{"_index":556,"title":{},"body":{"index.html":{}}}],["prepare",{"_index":609,"title":{},"body":{"index.html":{}}}],["preps",{"_index":613,"title":{},"body":{"index.html":{}}}],["priority",{"_index":13,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/CollapseState.html":{},"index.html":{}}}],["private",{"_index":176,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["process",{"_index":417,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["project",{"_index":373,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projects",{"_index":639,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["property",{"_index":102,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["propkey",{"_index":258,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["propkey.tolowercase",{"_index":261,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["provided",{"_index":700,"title":{},"body":{"license.html":{}}}],["providers",{"_index":337,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":173,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["publish",{"_index":684,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":710,"title":{},"body":{"license.html":{}}}],["questions",{"_index":554,"title":{},"body":{"index.html":{}}}],["read",{"_index":652,"title":{},"body":{"index.html":{}}}],["readme",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["readme.md",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":166,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["real",{"_index":640,"title":{},"body":{"index.html":{}}}],["refactoring",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":647,"title":{},"body":{"index.html":{}}}],["regular",{"_index":363,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["release",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":121,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["renderer",{"_index":182,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["renderer2",{"_index":39,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["reset",{"_index":343,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}],["resolves",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":679,"title":{},"body":{"license.html":{}}}],["result",{"_index":24,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":217,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["rights",{"_index":682,"title":{},"body":{"license.html":{}}}],["root",{"_index":583,"title":{},"body":{"index.html":{}}}],["row",{"_index":64,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["rows",{"_index":85,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["save",{"_index":643,"title":{},"body":{"index.html":{}}}],["script",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["scrollable",{"_index":151,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["scrolling",{"_index":620,"title":{},"body":{"index.html":{}}}],["scss",{"_index":599,"title":{},"body":{"index.html":{}}}],["search",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":125,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["selector",{"_index":48,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["sell",{"_index":688,"title":{},"body":{"license.html":{}}}],["set",{"_index":87,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["shall",{"_index":696,"title":{},"body":{"license.html":{}}}],["show",{"_index":83,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["showbacklog",{"_index":61,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["shown",{"_index":80,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["shows",{"_index":58,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["showungroupedinbacklog",{"_index":114,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["size",{"_index":118,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["smalltext",{"_index":119,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["software",{"_index":674,"title":{},"body":{"license.html":{}}}],["solid",{"_index":365,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["som",{"_index":557,"title":{},"body":{"index.html":{}}}],["soon",{"_index":619,"title":{},"body":{"index.html":{}}}],["sort",{"_index":101,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["sortby",{"_index":103,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"modules/NgxTaskboardModule.html":{}}}],["src/lib/board/board.component.ts",{"_index":28,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"coverage.html":{}}}],["src/lib/ngx",{"_index":344,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["src/lib/types.ts",{"_index":6,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/CollapseState.html":{},"coverage.html":{}}}],["standalone",{"_index":628,"title":{},"body":{"index.html":{}}}],["start",{"_index":627,"title":{},"body":{"index.html":{}}}],["started",{"_index":369,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":14,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/CollapseState.html":{},"index.html":{}}}],["stored",{"_index":113,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["string).tolowercase",{"_index":218,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["structured",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["styleurls",{"_index":53,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["styling",{"_index":559,"title":{},"body":{"index.html":{}}}],["subject",{"_index":693,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":686,"title":{},"body":{"license.html":{}}}],["submodule",{"_index":659,"title":{},"body":{"index.html":{}}}],["submoduling",{"_index":658,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":698,"title":{},"body":{"license.html":{}}}],["support",{"_index":725,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":356,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"modules.html":{}}}],["symlink",{"_index":636,"title":{},"body":{"index.html":{}}}],["symlinking",{"_index":646,"title":{},"body":{"index.html":{}}}],["table",{"_index":538,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["taskboard",{"_index":50,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["taskboard.git",{"_index":626,"title":{},"body":{"index.html":{}}}],["taskboard.module.ts",{"_index":345,"title":{},"body":{"modules/NgxTaskboardModule.html":{}}}],["taskboards",{"_index":544,"title":{},"body":{"index.html":{}}}],["template",{"_index":120,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["templateref",{"_index":40,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["templateurl",{"_index":51,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["test",{"_index":615,"title":{},"body":{"index.html":{}}}],["tets",{"_index":656,"title":{},"body":{"index.html":{}}}],["theme",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["this.collapsestate(part",{"_index":279,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.collapsestates.filter(item",{"_index":245,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.collapsestates.find(item",{"_index":280,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.collapsestates.push(...this.hheadings.map(item",{"_index":203,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.collapsestates.push(...this.vheadings.map(item",{"_index":201,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.createplaceholderelement(this.currentdragzone",{"_index":314,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.currentdragzone",{"_index":300,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.determinecorrectgroupkeys(item",{"_index":211,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.determinecorrectgroupkeys(this.dragitem",{"_index":302,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.dragitem",{"_index":287,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.dragitem[groupkeys.hgroupkey",{"_index":304,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.dragitem[groupkeys.vgroupkey",{"_index":303,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.dragoverplaceholdertemplate",{"_index":318,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.dragoverplaceholdertemplate.elementref.nativeelement.clonenode(true",{"_index":319,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.dragstarted.emit(this.dragitem",{"_index":288,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.dropped.emit(this.dragitem",{"_index":305,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.elementcreateclick.emit(group",{"_index":291,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.getcaseinsensitivepropkey(this.items[0",{"_index":256,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.getheadings(this.hgroupkey",{"_index":196,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.getheadings(this.vgroupkey",{"_index":200,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.hcollapsed",{"_index":204,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.hgroupkey",{"_index":191,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.hgroupkeys",{"_index":195,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.hgroupkeys.length",{"_index":193,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.hheadings",{"_index":192,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.hheadings).some(i",{"_index":248,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.invertgroupdirection",{"_index":186,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.items",{"_index":263,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.items.filter(item",{"_index":209,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.placeholderset",{"_index":301,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.renderer.appendchild(event.currenttarget",{"_index":315,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.renderer.createelement('div",{"_index":320,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.renderer.removechild(lastplaceholder.parentnode",{"_index":312,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.renderer.removechild(placeholderel.parentnode",{"_index":299,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.renderer.setattribute(placeholderelement",{"_index":329,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.renderer.setstyle(placeholderelement",{"_index":321,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.showungroupedinbacklog",{"_index":222,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.sortby",{"_index":226,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.vcollapsed",{"_index":202,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.vgroupkey",{"_index":189,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.vgroupkeys",{"_index":199,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.vgroupkeys.length",{"_index":198,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["this.vheadings",{"_index":197,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["thorsten",{"_index":608,"title":{},"body":{"index.html":{}}}],["togglecollapse(group",{"_index":275,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["togglecollapsegroup(direction",{"_index":242,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["tolowercase",{"_index":309,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["tort",{"_index":720,"title":{},"body":{"license.html":{}}}],["true",{"_index":62,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["tslint:disable",{"_index":45,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["typeof",{"_index":231,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["types",{"_index":44,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["undefined",{"_index":216,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["unreleased",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":567,"title":{},"body":{"index.html":{}}}],["use",{"_index":153,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{},"license.html":{}}}],["user",{"_index":15,"title":{},"body":{"interfaces/CardItem.html":{},"interfaces/ClickEvent.html":{},"interfaces/CollapseState.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["using",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["utc",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["v1.0.10",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["v1.0.11",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["v1.0.12",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["v1.0.13",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["v1.0.14",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["v1.0.17",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["v1.0.18",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["v1.0.20",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["v1.0.21",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["v1.0.22",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["v1.0.25",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["v1.0.26",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["v1.0.27",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["v1.0.7",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["v1.0.8",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["v1.0.9",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["v1.1.0",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["vaddnewitems",{"_index":94,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["value",{"_index":617,"title":{},"body":{"index.html":{}}}],["vcollapsable",{"_index":160,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["vcollapsed",{"_index":162,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["vertical",{"_index":247,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{}}}],["vgkey",{"_index":188,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["vgroup",{"_index":30,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"changelog.html":{},"index.html":{}}}],["vgroupkey",{"_index":99,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["vgroupkeys",{"_index":89,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["vheaderclass",{"_index":147,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["vheadertemplate",{"_index":134,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["vheadings",{"_index":175,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["viewport",{"_index":152,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["viewport.if",{"_index":662,"title":{},"body":{"index.html":{}}}],["visible",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["vitem",{"_index":212,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["void",{"_index":243,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["vrow",{"_index":293,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["vvalue.tolowercase",{"_index":219,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["walking",{"_index":604,"title":{},"body":{"index.html":{}}}],["want",{"_index":82,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{},"index.html":{}}}],["warranties",{"_index":706,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":701,"title":{},"body":{"license.html":{}}}],["watch",{"_index":633,"title":{},"body":{"index.html":{}}}],["water",{"_index":602,"title":{},"body":{"index.html":{}}}],["whether",{"_index":718,"title":{},"body":{"license.html":{}}}],["width",{"_index":326,"title":{},"body":{"interfaces/ClickEvent.html":{},"interfaces/GroupKeys.html":{}}}],["without",{"_index":678,"title":{},"body":{"license.html":{}}}],["work",{"_index":657,"title":{},"body":{"index.html":{}}}],["working",{"_index":593,"title":{},"body":{"index.html":{}}}],["xmas",{"_index":610,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":342,"title":{},"body":{"modules/NgxTaskboardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/CardItem.html":{"url":"interfaces/CardItem.html","title":"interface - CardItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        color\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        priority\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem {\n    id: number;\n    name: string;\n    status?: string;\n    color?: string;\n    user?: string;\n    priority?: number;\n}\n\nexport interface CollapseState {\n    name: string;\n    collapsed: boolean;\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClickEvent.html":{"url":"interfaces/ClickEvent.html","title":"interface - ClickEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClickEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/board/board.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hGroup\n                                \n                                \n                                        vGroup\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hGroup\n                                    \n                                \n                                \n                                    \n                                        hGroup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vGroup\n                                    \n                                \n                                \n                                    \n                                        vGroup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, TemplateRef } from '@angular/core';\nimport { CodegenComponentFactoryResolver } from '@angular/core/src/linker/component_factory_resolver';\nimport { CardItem, CollapseState } from '../types';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-taskboard',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n\n  /** Shows the blacklog on onit */\n  @Input() showBacklog = true;\n\n  /** Name of the backlog row */\n  @Input() backlogName = 'Backlog';\n\n  /** Items to display */\n  @Input() items: Array | Array = [];\n\n  /**\n   * Grouping keys for columns (if not passed, the keys will be determined out of the items)\n   * Caution: If you don't pass any headings manually, only the columns are shown, which have data.\n   * If you want to show emtpy rows, please set them\n   */\n  @Input() hGroupKeys: Array = [];\n\n  /**\n   * Grouping keys for rows (if not passed, the keys will be determined out of the items)\n   * Caution: If you don't pass any headings manually, only the rows are shown, which have data.\n   * If you want to show emtpy rows, please set them\n   */\n  @Input() vGroupKeys: Array = [];\n\n  /** Show add buttons on the column headings */\n  @Input() hAddNewItems = true;\n\n  /** Show add buttons on the row headings */\n  @Input() vAddNewItems = true;\n\n  /** Show add buttons in the cells for columns and rows */\n  @Input() cellAddNewItems = true;\n\n  /** Key to group data for rows */\n  @Input() vGroupKey = '';\n\n  /** Key to group data for columns */\n  @Input() hGroupKey = '';\n\n  /** Sort items by property */\n  @Input() sortBy = '';\n\n  /** Board name to show between row and column header */\n  @Input() boardName = '';\n\n  /** Invert rows and columns */\n  @Input() invertGroupDirection = false;\n\n  /** All items which can't be grouped into rows and columns are stored into the backlog  */\n  @Input() showUngroupedInBacklog = true;\n\n  /** Decrease overall font size */\n  @Input() smallText = false;\n\n  /** Template for items to render. \"item\" object ist passed (see examples) */\n  @Input() itemTemplate: TemplateRef;\n\n  /** Template for collapsed rows to render. \"count\" object ist passed (see examples) */\n  @Input() noElementsTemplate: TemplateRef;\n\n  /** Template for column headers. Current groupName will be passed (see examples) */\n  @Input() hHeaderTemplate: TemplateRef;\n\n  /** Template for row headers. Current groupName will be passed (see examples) */\n  @Input() vHeaderTemplate: TemplateRef;\n\n  /** Template for actions, add and collapse buttons (see examples) */\n  @Input() actionsTemplate: TemplateRef;\n\n  /** Template for the placeholder element which will be generated when an item is draged over a cell */\n  @Input() dragoverPlaceholderTemplate: TemplateRef;\n\n  /** Default css class for row header */\n  @Input() vHeaderClass = 'card-header';\n\n  /** Default css class for column header */\n  @Input() hHeaderClass = 'card-header';\n\n  /** Default css class for cell header */\n  @Input() cellClass = 'card-header';\n\n  /**\n   * If set to true, the rows and columns are scrollable and will be out of the viewport.\n   * If not set, all rows and column will only use 100% of the parent element (aligned by flex/flex-fill)\n   */\n  @Input() scrollable = false;\n\n  /** Allow to collapse the rows */\n  @Input() vCollapsable = true;\n\n  /** Rows are collapsed or not on init */\n  @Input() vCollapsed = false;\n\n  /** Columns are collapsed or not on init */\n  @Input() hCollapsed = false;\n\n  /** Fired when the user drags an item. Current item is passed */\n  @Output() readonly dragStarted = new EventEmitter();\n\n  /** Fired when an item is dropped. Current item is passed  */\n  @Output() readonly dropped = new EventEmitter();\n\n  /** Fired when an add action is click. Current `ClickEvent` is passed */\n  @Output() readonly elementCreateClick = new EventEmitter();\n\n  public hHeadings: Array = [];\n  public vHeadings: Array = [];\n\n  private readonly collapseStates: Array = [];\n  private dragItem: CardItem;\n  private placeholderSet = false;\n  private currentDragZone: string;\n\n  constructor(private readonly renderer: Renderer2, private readonly elRef: ElementRef, private readonly cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    if (this.invertGroupDirection) {\n      const vGkey = this.vGroupKey;\n      const hGkey = this.hGroupKey;\n\n      this.hGroupKey = vGkey;\n      this.vGroupKey = hGkey;\n    }\n\n    this.hHeadings = (this.hGroupKeys.length > 0 ? this.hGroupKeys : this.getHeadings(this.hGroupKey));\n    this.vHeadings = (this.vGroupKeys.length > 0 ? this.vGroupKeys : this.getHeadings(this.vGroupKey));\n\n    this.collapseStates.push(...this.vHeadings.map(item => ({ name: item, collapsed: this.vCollapsed })));\n    this.collapseStates.push(...this.hHeadings.map(item => ({ name: item, collapsed: this.hCollapsed })));\n  }\n\n  getItemsOfGroup(vValue: string, hValue: string): Array | Array {\n    // console.log('getItemsOfGroup', arguments);\n    let items = this.items.filter(item => {\n\n      const groupKeys: GroupKeys = this.determineCorrectGroupKeys(item);\n\n      const vItem = item[groupKeys.vGroupKey];\n      const hItem = item[groupKeys.hGroupKey];\n\n      if (hItem == undefined) {\n        return false;\n      }\n\n      if (vItem == undefined) {\n        return false;\n      }\n\n      return (vItem as string).toLowerCase() === vValue.toLowerCase() &&\n        (hItem).toLowerCase() === hValue.toLowerCase();\n    });\n\n    if (this.showUngroupedInBacklog) {\n      items = items.filter(item => item[this.vGroupKey] !== '' && item[this.hGroupKey] !== '');\n    }\n\n    if (this.sortBy !== '') {\n      /* Detect datatype of sortBy-Field */\n      const fieldType = typeof (items.some(item => items[0][this.sortBy] !== undefined && items[0][this.sortBy] !== null)[this.sortBy]);\n      if (fieldType) {\n        return items.sort((a, b) => {\n\n          const aField = a[this.sortBy];\n          const bField = b[this.sortBy];\n\n          if (fieldType === 'number') {\n            return bField - aField;\n          }\n\n          if (fieldType === 'string') {\n            if (aField  bField) {\n              return 1;\n            }\n\n            return 0;\n          }\n\n        });\n      } else {\n        return items;\n      }\n\n    }\n    return items;\n  }\n\n  toggleCollapseGroup(direction: string, collapsed: boolean): void {\n    const groupKeysToToggle = this.collapseStates.filter(item => (direction == 'vertical'  ? this.vHeadings : this.hHeadings).some(i => i.toLowerCase() == item.name.toLowerCase()));\n    groupKeysToToggle.forEach(item => item.collapsed = !collapsed);\n    if (groupKeysToToggle.length > 0) {\n      if (direction == 'vertical') {\n        debugger;\n        this.vCollapsed = !collapsed;\n      } else {\n        this.hCollapsed = !collapsed;\n      }\n    }\n  }\n\n  determineCorrectGroupKeys(item: object): GroupKeys {\n    return {\n      hGroupKey: this.getCaseInsensitivePropKey(this.items[0], this.hGroupKey),\n      vGroupKey: this.getCaseInsensitivePropKey(this.items[0], this.vGroupKey)\n    };\n  }\n\n  getCaseInsensitivePropKey(item: object, propKey: string): string {\n    return Object.keys(item).find(key => key.toLowerCase() === propKey.toLowerCase());\n  }\n\n  getHeadings(groupKey: string = this.vGroupKey): Array {\n    const keys = (this.items as Array).map((item: any) =>\n      item[Object.keys(item).find(key => key.toLowerCase() === groupKey.toLowerCase())]\n    );\n\n    return keys.filter((elem, pos, arr) => {\n      return arr.indexOf(elem) === pos && (this.showUngroupedInBacklog && elem !== '');\n    });\n  }\n\n  getUngroupedItems(): Array | Array {\n    if (this.showUngroupedInBacklog) {\n      return this.items.filter(item => {\n        const groupKeys: GroupKeys = this.determineCorrectGroupKeys(item);\n        const isUngrouped = (item[groupKeys.vGroupKey] === '' && item[groupKeys.hGroupKey] === '') || (item[groupKeys.vGroupKey] === null && item[groupKeys.hGroupKey] === null);\n        return isUngrouped;\n      });\n    }\n\n    return [];\n  }\n\n  toggleCollapse(group: { hGroup: string, vGroup: string }): void {\n\n    const part = group.hGroup || group.vGroup;\n\n    const collapseState = this.collapseState(part);\n    this.collapseStates.find(item => item.name === part).collapsed = !collapseState;\n    // console.log(\"Toggle: \"+part);\n  }\n\n  collapseState(part: string): boolean {\n    return this.collapseStates.find(item => item.name === part).collapsed;\n  }\n\n  public dragStart(event: DragEvent, item: CardItem) {\n    this.dragItem = item;\n    this.dragStarted.emit(this.dragItem);\n  }\n\n  public dragEnd(event: DragEvent, item: CardItem) {\n    this.dragItem = undefined;\n\n  }\n\n  createElement(group: ClickEvent) {\n    this.elementCreateClick.emit(group);\n  }\n\n  public drop(event: DragEvent, vRow: string, hRow: string) {\n    event.preventDefault();\n    if (event.currentTarget) {\n      const placeholderEl = (event.currentTarget as HTMLElement).querySelector('.placeholder');\n      if (placeholderEl) {\n        this.renderer.removeChild(placeholderEl.parentNode, placeholderEl);\n      }\n      this.currentDragZone = '';\n      this.placeholderSet = false;\n    }\n\n    const groupKeys: GroupKeys = this.determineCorrectGroupKeys(this.dragItem);\n\n    this.dragItem[groupKeys.vGroupKey] = vRow;\n    this.dragItem[groupKeys.hGroupKey] = hRow;\n\n    this.dropped.emit(this.dragItem);\n    this.dragItem = undefined;\n  }\n\n  public dragOver(event: DragEvent, vRow: string, hRow: string) {\n    if (this.dragItem) {\n      event.preventDefault();\n\n      if (vRow == undefined) {\n        vRow = '';\n      }\n\n      if (hRow == undefined) {\n        hRow = '';\n      }\n\n      const dragZone = `${vRow}-${hRow.replace(' ', '')}`.toLowerCase();\n      if (dragZone !== this.currentDragZone && this.currentDragZone !== '') {\n        const lastPlaceholder = document.getElementById(this.currentDragZone);\n        if (lastPlaceholder) {\n          this.renderer.removeChild(lastPlaceholder.parentNode, lastPlaceholder);\n          this.placeholderSet = false;\n        }\n      }\n\n      this.currentDragZone = `${vRow}-${hRow.replace(' ', '')}`.toLowerCase();\n\n      if (!this.placeholderSet) {\n        const placeholderElement = this.createPlaceholderElement(this.currentDragZone);\n        this.renderer.appendChild(event.currentTarget, placeholderElement);\n        this.placeholderSet = true;\n      }\n    }\n  }\n\n  createPlaceholderElement(id: string): HTMLElement {\n    if (this.dragoverPlaceholderTemplate) {\n      return this.dragoverPlaceholderTemplate.elementRef.nativeElement.cloneNode(true);\n    } else {\n      const placeholderElement: HTMLElement = this.renderer.createElement('div');\n      this.renderer.setStyle(placeholderElement, 'border', '1px dashed gray');\n      this.renderer.setStyle(placeholderElement, 'width', '100%');\n      this.renderer.setStyle(placeholderElement, 'height', '50px');\n      this.renderer.setAttribute(placeholderElement, 'id', this.currentDragZone);\n      this.renderer.setAttribute(placeholderElement, 'class', 'placeholder');\n\n      return placeholderElement;\n    }\n  }\n}\n\nexport interface ClickEvent {\n  hGroup: string;\n  vGroup: string;\n}\n\nexport interface GroupKeys {\n  hGroupKey: string;\n  vGroupKey: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollapseState.html":{"url":"interfaces/CollapseState.html","title":"interface - CollapseState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollapseState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        collapsed\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collapsed\n                                    \n                                \n                                \n                                    \n                                        collapsed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CardItem {\n    id: number;\n    name: string;\n    status?: string;\n    color?: string;\n    user?: string;\n    priority?: number;\n}\n\nexport interface CollapseState {\n    name: string;\n    collapsed: boolean;\n}\n\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GroupKeys.html":{"url":"interfaces/GroupKeys.html","title":"interface - GroupKeys","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GroupKeys\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/board/board.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hGroupKey\n                                \n                                \n                                        vGroupKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hGroupKey\n                                    \n                                \n                                \n                                    \n                                        hGroupKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vGroupKey\n                                    \n                                \n                                \n                                    \n                                        vGroupKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2, TemplateRef } from '@angular/core';\nimport { CodegenComponentFactoryResolver } from '@angular/core/src/linker/component_factory_resolver';\nimport { CardItem, CollapseState } from '../types';\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'ngx-taskboard',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n\n  /** Shows the blacklog on onit */\n  @Input() showBacklog = true;\n\n  /** Name of the backlog row */\n  @Input() backlogName = 'Backlog';\n\n  /** Items to display */\n  @Input() items: Array | Array = [];\n\n  /**\n   * Grouping keys for columns (if not passed, the keys will be determined out of the items)\n   * Caution: If you don't pass any headings manually, only the columns are shown, which have data.\n   * If you want to show emtpy rows, please set them\n   */\n  @Input() hGroupKeys: Array = [];\n\n  /**\n   * Grouping keys for rows (if not passed, the keys will be determined out of the items)\n   * Caution: If you don't pass any headings manually, only the rows are shown, which have data.\n   * If you want to show emtpy rows, please set them\n   */\n  @Input() vGroupKeys: Array = [];\n\n  /** Show add buttons on the column headings */\n  @Input() hAddNewItems = true;\n\n  /** Show add buttons on the row headings */\n  @Input() vAddNewItems = true;\n\n  /** Show add buttons in the cells for columns and rows */\n  @Input() cellAddNewItems = true;\n\n  /** Key to group data for rows */\n  @Input() vGroupKey = '';\n\n  /** Key to group data for columns */\n  @Input() hGroupKey = '';\n\n  /** Sort items by property */\n  @Input() sortBy = '';\n\n  /** Board name to show between row and column header */\n  @Input() boardName = '';\n\n  /** Invert rows and columns */\n  @Input() invertGroupDirection = false;\n\n  /** All items which can't be grouped into rows and columns are stored into the backlog  */\n  @Input() showUngroupedInBacklog = true;\n\n  /** Decrease overall font size */\n  @Input() smallText = false;\n\n  /** Template for items to render. \"item\" object ist passed (see examples) */\n  @Input() itemTemplate: TemplateRef;\n\n  /** Template for collapsed rows to render. \"count\" object ist passed (see examples) */\n  @Input() noElementsTemplate: TemplateRef;\n\n  /** Template for column headers. Current groupName will be passed (see examples) */\n  @Input() hHeaderTemplate: TemplateRef;\n\n  /** Template for row headers. Current groupName will be passed (see examples) */\n  @Input() vHeaderTemplate: TemplateRef;\n\n  /** Template for actions, add and collapse buttons (see examples) */\n  @Input() actionsTemplate: TemplateRef;\n\n  /** Template for the placeholder element which will be generated when an item is draged over a cell */\n  @Input() dragoverPlaceholderTemplate: TemplateRef;\n\n  /** Default css class for row header */\n  @Input() vHeaderClass = 'card-header';\n\n  /** Default css class for column header */\n  @Input() hHeaderClass = 'card-header';\n\n  /** Default css class for cell header */\n  @Input() cellClass = 'card-header';\n\n  /**\n   * If set to true, the rows and columns are scrollable and will be out of the viewport.\n   * If not set, all rows and column will only use 100% of the parent element (aligned by flex/flex-fill)\n   */\n  @Input() scrollable = false;\n\n  /** Allow to collapse the rows */\n  @Input() vCollapsable = true;\n\n  /** Rows are collapsed or not on init */\n  @Input() vCollapsed = false;\n\n  /** Columns are collapsed or not on init */\n  @Input() hCollapsed = false;\n\n  /** Fired when the user drags an item. Current item is passed */\n  @Output() readonly dragStarted = new EventEmitter();\n\n  /** Fired when an item is dropped. Current item is passed  */\n  @Output() readonly dropped = new EventEmitter();\n\n  /** Fired when an add action is click. Current `ClickEvent` is passed */\n  @Output() readonly elementCreateClick = new EventEmitter();\n\n  public hHeadings: Array = [];\n  public vHeadings: Array = [];\n\n  private readonly collapseStates: Array = [];\n  private dragItem: CardItem;\n  private placeholderSet = false;\n  private currentDragZone: string;\n\n  constructor(private readonly renderer: Renderer2, private readonly elRef: ElementRef, private readonly cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    if (this.invertGroupDirection) {\n      const vGkey = this.vGroupKey;\n      const hGkey = this.hGroupKey;\n\n      this.hGroupKey = vGkey;\n      this.vGroupKey = hGkey;\n    }\n\n    this.hHeadings = (this.hGroupKeys.length > 0 ? this.hGroupKeys : this.getHeadings(this.hGroupKey));\n    this.vHeadings = (this.vGroupKeys.length > 0 ? this.vGroupKeys : this.getHeadings(this.vGroupKey));\n\n    this.collapseStates.push(...this.vHeadings.map(item => ({ name: item, collapsed: this.vCollapsed })));\n    this.collapseStates.push(...this.hHeadings.map(item => ({ name: item, collapsed: this.hCollapsed })));\n  }\n\n  getItemsOfGroup(vValue: string, hValue: string): Array | Array {\n    // console.log('getItemsOfGroup', arguments);\n    let items = this.items.filter(item => {\n\n      const groupKeys: GroupKeys = this.determineCorrectGroupKeys(item);\n\n      const vItem = item[groupKeys.vGroupKey];\n      const hItem = item[groupKeys.hGroupKey];\n\n      if (hItem == undefined) {\n        return false;\n      }\n\n      if (vItem == undefined) {\n        return false;\n      }\n\n      return (vItem as string).toLowerCase() === vValue.toLowerCase() &&\n        (hItem).toLowerCase() === hValue.toLowerCase();\n    });\n\n    if (this.showUngroupedInBacklog) {\n      items = items.filter(item => item[this.vGroupKey] !== '' && item[this.hGroupKey] !== '');\n    }\n\n    if (this.sortBy !== '') {\n      /* Detect datatype of sortBy-Field */\n      const fieldType = typeof (items.some(item => items[0][this.sortBy] !== undefined && items[0][this.sortBy] !== null)[this.sortBy]);\n      if (fieldType) {\n        return items.sort((a, b) => {\n\n          const aField = a[this.sortBy];\n          const bField = b[this.sortBy];\n\n          if (fieldType === 'number') {\n            return bField - aField;\n          }\n\n          if (fieldType === 'string') {\n            if (aField  bField) {\n              return 1;\n            }\n\n            return 0;\n          }\n\n        });\n      } else {\n        return items;\n      }\n\n    }\n    return items;\n  }\n\n  toggleCollapseGroup(direction: string, collapsed: boolean): void {\n    const groupKeysToToggle = this.collapseStates.filter(item => (direction == 'vertical'  ? this.vHeadings : this.hHeadings).some(i => i.toLowerCase() == item.name.toLowerCase()));\n    groupKeysToToggle.forEach(item => item.collapsed = !collapsed);\n    if (groupKeysToToggle.length > 0) {\n      if (direction == 'vertical') {\n        debugger;\n        this.vCollapsed = !collapsed;\n      } else {\n        this.hCollapsed = !collapsed;\n      }\n    }\n  }\n\n  determineCorrectGroupKeys(item: object): GroupKeys {\n    return {\n      hGroupKey: this.getCaseInsensitivePropKey(this.items[0], this.hGroupKey),\n      vGroupKey: this.getCaseInsensitivePropKey(this.items[0], this.vGroupKey)\n    };\n  }\n\n  getCaseInsensitivePropKey(item: object, propKey: string): string {\n    return Object.keys(item).find(key => key.toLowerCase() === propKey.toLowerCase());\n  }\n\n  getHeadings(groupKey: string = this.vGroupKey): Array {\n    const keys = (this.items as Array).map((item: any) =>\n      item[Object.keys(item).find(key => key.toLowerCase() === groupKey.toLowerCase())]\n    );\n\n    return keys.filter((elem, pos, arr) => {\n      return arr.indexOf(elem) === pos && (this.showUngroupedInBacklog && elem !== '');\n    });\n  }\n\n  getUngroupedItems(): Array | Array {\n    if (this.showUngroupedInBacklog) {\n      return this.items.filter(item => {\n        const groupKeys: GroupKeys = this.determineCorrectGroupKeys(item);\n        const isUngrouped = (item[groupKeys.vGroupKey] === '' && item[groupKeys.hGroupKey] === '') || (item[groupKeys.vGroupKey] === null && item[groupKeys.hGroupKey] === null);\n        return isUngrouped;\n      });\n    }\n\n    return [];\n  }\n\n  toggleCollapse(group: { hGroup: string, vGroup: string }): void {\n\n    const part = group.hGroup || group.vGroup;\n\n    const collapseState = this.collapseState(part);\n    this.collapseStates.find(item => item.name === part).collapsed = !collapseState;\n    // console.log(\"Toggle: \"+part);\n  }\n\n  collapseState(part: string): boolean {\n    return this.collapseStates.find(item => item.name === part).collapsed;\n  }\n\n  public dragStart(event: DragEvent, item: CardItem) {\n    this.dragItem = item;\n    this.dragStarted.emit(this.dragItem);\n  }\n\n  public dragEnd(event: DragEvent, item: CardItem) {\n    this.dragItem = undefined;\n\n  }\n\n  createElement(group: ClickEvent) {\n    this.elementCreateClick.emit(group);\n  }\n\n  public drop(event: DragEvent, vRow: string, hRow: string) {\n    event.preventDefault();\n    if (event.currentTarget) {\n      const placeholderEl = (event.currentTarget as HTMLElement).querySelector('.placeholder');\n      if (placeholderEl) {\n        this.renderer.removeChild(placeholderEl.parentNode, placeholderEl);\n      }\n      this.currentDragZone = '';\n      this.placeholderSet = false;\n    }\n\n    const groupKeys: GroupKeys = this.determineCorrectGroupKeys(this.dragItem);\n\n    this.dragItem[groupKeys.vGroupKey] = vRow;\n    this.dragItem[groupKeys.hGroupKey] = hRow;\n\n    this.dropped.emit(this.dragItem);\n    this.dragItem = undefined;\n  }\n\n  public dragOver(event: DragEvent, vRow: string, hRow: string) {\n    if (this.dragItem) {\n      event.preventDefault();\n\n      if (vRow == undefined) {\n        vRow = '';\n      }\n\n      if (hRow == undefined) {\n        hRow = '';\n      }\n\n      const dragZone = `${vRow}-${hRow.replace(' ', '')}`.toLowerCase();\n      if (dragZone !== this.currentDragZone && this.currentDragZone !== '') {\n        const lastPlaceholder = document.getElementById(this.currentDragZone);\n        if (lastPlaceholder) {\n          this.renderer.removeChild(lastPlaceholder.parentNode, lastPlaceholder);\n          this.placeholderSet = false;\n        }\n      }\n\n      this.currentDragZone = `${vRow}-${hRow.replace(' ', '')}`.toLowerCase();\n\n      if (!this.placeholderSet) {\n        const placeholderElement = this.createPlaceholderElement(this.currentDragZone);\n        this.renderer.appendChild(event.currentTarget, placeholderElement);\n        this.placeholderSet = true;\n      }\n    }\n  }\n\n  createPlaceholderElement(id: string): HTMLElement {\n    if (this.dragoverPlaceholderTemplate) {\n      return this.dragoverPlaceholderTemplate.elementRef.nativeElement.cloneNode(true);\n    } else {\n      const placeholderElement: HTMLElement = this.renderer.createElement('div');\n      this.renderer.setStyle(placeholderElement, 'border', '1px dashed gray');\n      this.renderer.setStyle(placeholderElement, 'width', '100%');\n      this.renderer.setStyle(placeholderElement, 'height', '50px');\n      this.renderer.setAttribute(placeholderElement, 'id', this.currentDragZone);\n      this.renderer.setAttribute(placeholderElement, 'class', 'placeholder');\n\n      return placeholderElement;\n    }\n  }\n}\n\nexport interface ClickEvent {\n  hGroup: string;\n  vGroup: string;\n}\n\nexport interface GroupKeys {\n  hGroupKey: string;\n  vGroupKey: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxTaskboardModule.html":{"url":"modules/NgxTaskboardModule.html","title":"module - NgxTaskboardModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxTaskboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTaskboardModule\n\n\n\ncluster_NgxTaskboardModule_declarations\n\n\n\ncluster_NgxTaskboardModule_exports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nNgxTaskboardModule\n\nNgxTaskboardModule\n\nNgxTaskboardModule -->\n\nBoardComponent->NgxTaskboardModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nNgxTaskboardModule->BoardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-taskboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BoardComponent } from './board/board.component';\n\n// Fontawesome\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(fas, far, fab);\n\n@NgModule({\n  declarations: [BoardComponent],\n  imports: [BrowserModule, FontAwesomeModule],\n  exports: [BoardComponent]\n})\nexport class NgxTaskboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. Dates are displayed in UTC.\nGenerated by auto-changelog.\nUnreleased\n\nDocumentation changes b8c7df8\nChanges documentation script e6c0ac2\n\nv1.1.0\n\n17 August 2019\n\n\nLinting #10\nBumping dev branch #9\nresolves #11 #11\nAdd icon is now left from the collapser in vertical collapsed groups #5\nfix(Backlog not visible) #1\nfix(Backlog no visible) #1\nDocumenting, added compodoc 2586d8d\nRelease 1.1.0 99c15c0\nAdded contributing guidance and structured README f497b37\nChanges to build process, auto generate doc for inputs/outputs 78d3ac3\nAdded overall row collapser #12 2d82c4f\nRefactoring 7e69774\nFixed ClickEvent-Type a7e2165\ndoc(Documentation added) fc2c6ab\n\nv1.0.27\n\n15 August 2019\n\n\nFixed a bug with dragging items while using a custom item template 7b81695\nRelease 1.0.27 c663cab\n\nv1.0.26\n\n15 August 2019\n\n\nFixed a bug with case insenstive search of a group key #8\nRelease 1.0.26 fda1f2d\n\nv1.0.25\n\n15 August 2019\n\n\nRelease 1.0.25 9579042\nRelease 1.0.22 52403b9\n\nv1.0.22\n\n14 August 2019\n\n\nRelease 1.0.22 ef4bfe0\n\nv1.0.21\n\n14 August 2019\n\n\nRelease 1.0.21 a0214b1\n\nv1.0.20\n\n14 August 2019\n\n\nRelease 1.0.20 d3c1252\nRelease 1.0.18 fa092a2\n\nv1.0.18\n\n14 August 2019\n\n\nRelease 1.0.18 9c24376\n\nv1.0.17\n\n14 August 2019\n\n\nRelease 1.0.17 6bb6d60\n\nv1.0.14\n\n14 August 2019\n\n\nRelease 1.0.14 6a6d5a0\n\nv1.0.13\n\n14 August 2019\n\n\nRelease 1.0.13 92df858\n\nv1.0.12\n\n14 August 2019\n\n\nUpdated readme #7\nRelease 1.0.12 82bf483\n\nv1.0.11\n\n14 August 2019\n\n\nRelease 1.0.11 75fc3ac\n\nv1.0.10\n\n14 August 2019\n\n\ngitignore & changelog added 58768bc\nRelease 1.0.10 8153e4f\n\nv1.0.9\n\n14 August 2019\n\n\nRelease 1.0.9 3d8ec21\n\nv1.0.8\n\n14 August 2019\n\n\nRelease 1.0.7 8900b92\nRelease 1.0.8 2b3ab28\n\nv1.0.7\n\n14 August 2019\n\n\nMerge Master -> Dev #3\nAdded ability to pass correct vGroup and hGroup type to click-event #4\nInit commit 64b9079\nRelease 1.0.7 dba429e\nUpdate README.MD 1c05628\nItems type changed daf6196\nCreate LICENSE 18e23e9\nUpdate README.MD c26b313\nUpdate README.MD 2e88d6b\nAddes a gif 111650d\nUpdate README.MD 061fa49\nUpdate package.json 2424838\nCreate README.MD 22f5731\nSet theme jekyll-theme-cayman 2f6a23e\nCreate CNAME d32ca30\nCreate index.html 201e953\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/board/board.component.ts\n            \n            component\n            BoardComponent\n            \n                57 %\n                (31/54)\n            \n        \n        \n            \n                \n                src/lib/board/board.component.ts\n            \n            interface\n            ClickEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/board/board.component.ts\n            \n            interface\n            GroupKeys\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/types.ts\n            \n            interface\n            CardItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/types.ts\n            \n            interface\n            CollapseState\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^7.2.0\n        \n            @angular/core : ^7.2.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-taskboard\n   \nngx-taskboard is an implemention of my on taskboard, because all other taskboards are not that what I need. Feel free to contribute or leave some important feedback! Head over to the issues when you have questions or found a bug or leave a PR if you have som additions. Styling is made with Bootstrap, so it's 100% compatible.\nTable of Content\n\n\n\n\n\nDescription\nDependencies\nInstallation\nBasic usage\nConfiguration\nProperties\nEvents\n\n\nDatatypes\nCardItem\nClickEvent\n\n\nExamples\n\n\nLimitations\nContributing\nInstallation\nEvents\n\n\nDatatypes\nCardItem\nClickEvent\n\n\nExamples\n\n\nLimitations\nContributing\nInstallation\nEvents\n\n\nDatatypes\nCardItem\nClickEvent\n\n\nExamples\n\n\nLimitations\nContributing\nInstallation\nEvents\n\n\nDatatypes\nCardItem\nClickEvent\n\n\nExamples\n\n\nLimitations\nContributing\nInstallation\nEvents\n\n\nDatatypes\nCardItem\nClickEvent\n\n\nExamples\n\n\nLimitations\nContributing\nInstallation\n\n\n\n\n\nDescription\n\nDependencies\n\nAngular 7\nBootstrap 4\n\nInstallation\nnpm install @disane/ngx-taskboard\nBasic usage\napp.module.ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NgxTaskboardModule } from '@disane/ngx-taskboard';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, NgxTaskboardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\napp.component.html\n\napp.component.ts\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public items = [\n    { id: 1, name: 'Evaluate', color: '#fb3064', status: 'open', user: 'Marco', priority: 1 },\n    { id: 2, name: 'Call customer', color: '#71dd8f', status: 'working', user: 'Jamie', priority: 1 },\n    { id: 3, name: 'Fix bugs', color: '#29aa82', status: 'open', user: 'Malian', priority: 1 },\n    { id: 3, name: 'Create SCSS', color: '#e14a2f', status: 'open', user: 'Marco', priority: 1 },\n    { id: 4, name: 'Boil water', color: '#209ab7', status: 'working', user: 'Marco', priority: 2 },\n    { id: 4, name: 'Walking the doggo', color: '#b3f7dd', status: 'done', user: 'Thorsten', priority: 3 },\n    { id: 4, name: 'Prepare for xmas', color: '#ea6562', status: '', user: '' },\n    { id: 4, name: 'Birthday preps', color: '#b4ade5', status: 'test', user: '', priority: 5 }\n  ];\n\n  public vGroupKeys = ['open', 'working', 'test', 'done'];\n  public hGroupKeys = ['Marco', 'Jamie', 'Malian', 'Natalie', 'Thorsten'];\n\n  public vGroupKey = 'status';\n  public hGroupKey = 'user';\n  public sortBy = 'priority';\n\n}\nConfiguration\nProperties\n\n\n\n\nEvents\n\n\n\n\nName\nDefault value\nDescription\nType\n\n\n\n\nelementCreateClick\nnew EventEmitter()\nFired when an add action is click. Current ClickEvent is passed\nEventEmitter\n\n\ndropped\nnew EventEmitter()\nFired when an item is dropped. Current item is passed\nEventEmitter\n\n\ndragStarted\nnew EventEmitter()\nFired when the user drags an item. Current item is passed\nEventEmitter\n\n\n\n\n\nDatatypes\nCardItem\nexport interface CardItem {\n    id: number;\n    name: string;\n    status?: string;\n    color?: string;\n    user?: string;\n    priority?: number;\n}ClickEvent\nexport interface ClickEvent {\n  hGroup: string; \n  vGroup: string;\n}Examples\nFollowing soon\nLimitations\n\nScrolling actually not possible\n\nContributing\nInstallation\ngit clone https://github.com/Disane87/ngx-taskboard.git .Since this is a Angular library, you have can't start it as standalone, like a normal Angular application. Instead, you have to build it with ng build . --watch and link it with npm link. The link process creates a symlink to your global npm which you can access from other projects.\nIn your test or real project, you have to add the package, but only with another command npm link @disane/ngx-taskboard --save. This means, you are not obtaining the package from npm, instead you are symlinking it to you global npm which has a reference to the above created link in your project.\nThis is a bit odd, but you can read more about it here.\nIf you have an existing Angular library project with a tets application, you can work here with submoduling in git, instead of a git clone:\ngit submodule add https://github.com/Disane87/ngx-taskboard.git\n                                                                                                  | TemplateRef                 |\n| hAddNewItems                | Show add buttons on the column headings                                                                                                                                                                                                  |                                  |\n| hCollapsed                  | Columns are collapsed or not on init                                                                                                                                                                                                     |                                  |\n| hGroupKey                   | Key to group data for columns                                                                                                                                                                                                            |                                  |\n| hGroupKeys                  | Grouping keys for columns (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the columns are shown, which have data.If you want to show emtpy rows, please set them | Array                    |\n| hHeaderClass                | Default css class for column header                                                                                                                                                                                                      |                                  |\n| hHeaderTemplate             | Template for column headers. Current groupName will be passed (see examples)                                                                                                                                                             | TemplateRef                 |\n| invertGroupDirection        | Invert rows and columns                                                                                                                                                                                                                  |                                  |\n| items                       | Items to display                                                                                                                                                                                                                         | Array | Array |\n| vHeaderClass                | Default css class for row header                                                                                                                                                                                                         |                                  |\n| cellAddNewItems             | Show add buttons in the cells for columns and rows                                                                                                                                                                                       |                                  |\n| scrollable                  | If set to true, the rows and columns are scrollable and will be out of the viewport.If not set, all rows and column will only use 100% of the parent element (aligned by flex/flex-fill)                                                 |                                  |\n| showBacklog                 | Shows the blacklog on onit                                                                                                                                                                                                               |                                  |\n| showUngroupedInBacklog      | All items which can't be grouped into rows and columns are stored into the backlog                                                                                                                                                   |                                  |\n| smallText                   | Decrease overall font size                                                                                                                                                                                                               |                                  |\n| sortBy                      | Sort items by property                                                                                                                                                                                                                   |                                  |\n| vAddNewItems                | Show add buttons on the row headings                                                                                                                                                                                                     |                                  |\n| vCollapsable                | Allow to collapse the rows                                                                                                                                                                                                               |                                  |\n| vCollapsed                  | Rows are collapsed or not on init                                                                                                                                                                                                        |                                  |\n| vGroupKey                   | Key to group data for rows                                                                                                                                                                                                               |                                  |\n| vGroupKeys                  | Grouping keys for rows (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the rows are shown, which have data.If you want to show emtpy rows, please set them       | Array                    |\n| backlogName                 | Name of the backlog row                                                                                                                                                                                                                  |                                  |\n| actionsTemplate             | Template for actions, add and collapse buttons (see examples)                                                                                                                                                                            | TemplateRef                 |\n\\n\nEvents\n\\n| Name               | Default value                  | Description                                                      | Type         |\n| ------------------ | ------------------------------ | ---------------------------------------------------------------- | ------------ |\n| elementCreateClick | new EventEmitter() | Fired when an add action is click. Current ClickEvent is passed  | EventEmitter |\n| dropped            | new EventEmitter()     | Fired when an item is dropped. Current item is passed            | EventEmitter |\n| dragStarted        | new EventEmitter()     | Fired when the user drags an item. Current item is passed        | EventEmitter |\n\\n\nDatatypes\nCardItem\nexport interface CardItem {\n    id: number;\n    name: string;\n    status?: string;\n    color?: string;\n    user?: string;\n    priority?: number;\n}ClickEvent\nexport interface ClickEvent {\n  hGroup: string; \n  vGroup: string;\n}Examples\nFollowing soon\nLimitations\n\nScrolling actually not possible\n\nContributing\nInstallation\ngit clone https://github.com/Disane87/ngx-taskboard.git .Since this is a Angular library, you have can't start it as standalone, like a normal Angular application. Instead, you have to build it with ng build . --watch and link it with npm link. The link process creates a symlink to your global npm which you can access from other projects.\nIn your test or real project, you have to add the package, but only with another command npm link @disane/ngx-taskboard --save. This means, you are not obtaining the package from npm, instead you are symlinking it to you global npm which has a reference to the above created link in your project.\nThis is a bit odd, but you can read more about it here.\nIf you have an existing Angular library project with a tets application, you can work here with submoduling in git, instead of a git clone:\ngit submodule add https://github.com/Disane87/ngx-taskboard.git\n                                                                                                  | TemplateRef                 |\n| hAddNewItems                | Show add buttons on the column headings                                                                                                                                                                                                  |                                  |\n| hCollapsed                  | Columns are collapsed or not on init                                                                                                                                                                                                     |                                  |\n| hGroupKey                   | Key to group data for columns                                                                                                                                                                                                            |                                  |\n| hGroupKeys                  | Grouping keys for columns (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the columns are shown, which have data.If you want to show emtpy rows, please set them | Array                    |\n| hHeaderClass                | Default css class for column header                                                                                                                                                                                                      |                                  |\n| hHeaderTemplate             | Template for column headers. Current groupName will be passed (see examples)                                                                                                                                                             | TemplateRef                 |\n| invertGroupDirection        | Invert rows and columns                                                                                                                                                                                                                  |                                  |\n| items                       | Items to display                                                                                                                                                                                                                         | Array | Array |\n| vHeaderClass                | Default css class for row header                                                                                                                                                                                                         |                                  |\n| cellAddNewItems             | Show add buttons in the cells for columns and rows                                                                                                                                                                                       |                                  |\n| scrollable                  | If set to true, the rows and columns are scrollable and will be out of the viewport.If not set, all rows and column will only use 100% of the parent element (aligned by flex/flex-fill)                                                 |                                  |\n| showBacklog                 | Shows the blacklog on onit                                                                                                                                                                                                               |                                  |\n| showUngroupedInBacklog      | All items which can't be grouped into rows and columns are stored into the backlog                                                                                                                                                   |                                  |\n| smallText                   | Decrease overall font size                                                                                                                                                                                                               |                                  |\n| sortBy                      | Sort items by property                                                                                                                                                                                                                   |                                  |\n| vAddNewItems                | Show add buttons on the row headings                                                                                                                                                                                                     |                                  |\n| vCollapsable                | Allow to collapse the rows                                                                                                                                                                                                               |                                  |\n| vCollapsed                  | Rows are collapsed or not on init                                                                                                                                                                                                        |                                  |\n| vGroupKey                   | Key to group data for rows                                                                                                                                                                                                               |                                  |\n| vGroupKeys                  | Grouping keys for rows (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the rows are shown, which have data.If you want to show emtpy rows, please set them       | Array                    |\n| backlogName                 | Name of the backlog row                                                                                                                                                                                                                  |                                  |\n| actionsTemplate             | Template for actions, add and collapse buttons (see examples)                                                                                                                                                                            | TemplateRef                 |\n\\n\nEvents\n\\n| Name               | Default value                  | Description                                                      | Type         |\n| ------------------ | ------------------------------ | ---------------------------------------------------------------- | ------------ |\n| elementCreateClick | new EventEmitter() | Fired when an add action is click. Current ClickEvent is passed  | EventEmitter |\n| dropped            | new EventEmitter()     | Fired when an item is dropped. Current item is passed            | EventEmitter |\n| dragStarted        | new EventEmitter()     | Fired when the user drags an item. Current item is passed        | EventEmitter |\n\\n\nDatatypes\nCardItem\nexport interface CardItem {\n    id: number;\n    name: string;\n    status?: string;\n    color?: string;\n    user?: string;\n    priority?: number;\n}ClickEvent\nexport interface ClickEvent {\n  hGroup: string; \n  vGroup: string;\n}Examples\nFollowing soon\nLimitations\n\nScrolling actually not possible\n\nContributing\nInstallation\ngit clone https://github.com/Disane87/ngx-taskboard.git .Since this is a Angular library, you have can't start it as standalone, like a normal Angular application. Instead, you have to build it with ng build . --watch and link it with npm link. The link process creates a symlink to your global npm which you can access from other projects.\nIn your test or real project, you have to add the package, but only with another command npm link @disane/ngx-taskboard --save. This means, you are not obtaining the package from npm, instead you are symlinking it to you global npm which has a reference to the above created link in your project.\nThis is a bit odd, but you can read more about it here.\nIf you have an existing Angular library project with a tets application, you can work here with submoduling in git, instead of a git clone:\ngit submodule add https://github.com/Disane87/ngx-taskboard.git\n                                                                                                  | TemplateRef                 |\n| hAddNewItems                | Show add buttons on the column headings                                                                                                                                                                                                  |                                  |\n| hCollapsed                  | Columns are collapsed or not on init                                                                                                                                                                                                     |                                  |\n| hGroupKey                   | Key to group data for columns                                                                                                                                                                                                            |                                  |\n| hGroupKeys                  | Grouping keys for columns (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the columns are shown, which have data.If you want to show emtpy rows, please set them | Array                    |\n| hHeaderClass                | Default css class for column header                                                                                                                                                                                                      |                                  |\n| hHeaderTemplate             | Template for column headers. Current groupName will be passed (see examples)                                                                                                                                                             | TemplateRef                 |\n| invertGroupDirection        | Invert rows and columns                                                                                                                                                                                                                  |                                  |\n| items                       | Items to display                                                                                                                                                                                                                         | Array | Array |\n| vHeaderClass                | Default css class for row header                                                                                                                                                                                                         |                                  |\n| cellAddNewItems             | Show add buttons in the cells for columns and rows                                                                                                                                                                                       |                                  |\n| scrollable                  | If set to true, the rows and columns are scrollable and will be out of the viewport.If not set, all rows and column will only use 100% of the parent element (aligned by flex/flex-fill)                                                 |                                  |\n| showBacklog                 | Shows the blacklog on onit                                                                                                                                                                                                               |                                  |\n| showUngroupedInBacklog      | All items which can't be grouped into rows and columns are stored into the backlog                                                                                                                                                   |                                  |\n| smallText                   | Decrease overall font size                                                                                                                                                                                                               |                                  |\n| sortBy                      | Sort items by property                                                                                                                                                                                                                   |                                  |\n| vAddNewItems                | Show add buttons on the row headings                                                                                                                                                                                                     |                                  |\n| vCollapsable                | Allow to collapse the rows                                                                                                                                                                                                               |                                  |\n| vCollapsed                  | Rows are collapsed or not on init                                                                                                                                                                                                        |                                  |\n| vGroupKey                   | Key to group data for rows                                                                                                                                                                                                               |                                  |\n| vGroupKeys                  | Grouping keys for rows (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the rows are shown, which have data.If you want to show emtpy rows, please set them       | Array                    |\n| backlogName                 | Name of the backlog row                                                                                                                                                                                                                  |                                  |\n| actionsTemplate             | Template for actions, add and collapse buttons (see examples)                                                                                                                                                                            | TemplateRef                 |\n\\n\nEvents\n\n\n\n\nName\nDefault value\nDescription\nType\n\n\n\n\nelementCreateClick\nnew EventEmitter()\nFired when an add action is click. Current ClickEvent is passed\nEventEmitter\n\n\ndropped\nnew EventEmitter()\nFired when an item is dropped. Current item is passed\nEventEmitter\n\n\ndragStarted\nnew EventEmitter()\nFired when the user drags an item. Current item is passed\nEventEmitter\n\n\n\n\n\nDatatypes\nCardItem\nexport interface CardItem {\n    id: number;\n    name: string;\n    status?: string;\n    color?: string;\n    user?: string;\n    priority?: number;\n}ClickEvent\nexport interface ClickEvent {\n  hGroup: string; \n  vGroup: string;\n}Examples\nFollowing soon\nLimitations\n\nScrolling actually not possible\n\nContributing\nInstallation\ngit clone https://github.com/Disane87/ngx-taskboard.git .Since this is a Angular library, you have can't start it as standalone, like a normal Angular application. Instead, you have to build it with ng build . --watch and link it with npm link. The link process creates a symlink to your global npm which you can access from other projects.\nIn your test or real project, you have to add the package, but only with another command npm link @disane/ngx-taskboard --save. This means, you are not obtaining the package from npm, instead you are symlinking it to you global npm which has a reference to the above created link in your project.\nThis is a bit odd, but you can read more about it here.\nIf you have an existing Angular library project with a tets application, you can work here with submoduling in git, instead of a git clone:\ngit submodule add https://github.com/Disane87/ngx-taskboard.git\n                                                                                                | TemplateRef                 |\n| hAddNewItems                | Show add buttons on the column headings                                                                                                                                                                                                  |                                  |\n| hCollapsed                  | Columns are collapsed or not on init                                                                                                                                                                                                     |                                  |\n| hGroupKey                   | Key to group data for columns                                                                                                                                                                                                            |                                  |\n| hGroupKeys                  | Grouping keys for columns (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the columns are shown, which have data.If you want to show emtpy rows, please set them | Array                    |\n| hHeaderClass                | Default css class for column header                                                                                                                                                                                                      |                                  |\n| hHeaderTemplate             | Template for column headers. Current groupName will be passed (see examples)                                                                                                                                                             | TemplateRef                 |\n| invertGroupDirection        | Invert rows and columns                                                                                                                                                                                                                  |                                  |\n| items                       | Items to display                                                                                                                                                                                                                         | Array | Array |\n| vHeaderClass                | Default css class for row header                                                                                                                                                                                                         |                                  |\n| cellAddNewItems             | Show add buttons in the cells for columns and rows                                                                                                                                                                                       |                                  |\n| scrollable                  | If set to true, the rows and columns are scrollable and will be out of the viewport.If not set, all rows and column will only use 100% of the parent element (aligned by flex/flex-fill)                                                 |                                  |\n| showBacklog                 | Shows the blacklog on onit                                                                                                                                                                                                               |                                  |\n| showUngroupedInBacklog      | All items which can't be grouped into rows and columns are stored into the backlog                                                                                                                                                   |                                  |\n| smallText                   | Decrease overall font size                                                                                                                                                                                                               |                                  |\n| sortBy                      | Sort items by property                                                                                                                                                                                                                   |                                  |\n| vAddNewItems                | Show add buttons on the row headings                                                                                                                                                                                                     |                                  |\n| vCollapsable                | Allow to collapse the rows                                                                                                                                                                                                               |                                  |\n| vCollapsed                  | Rows are collapsed or not on init                                                                                                                                                                                                        |                                  |\n| vGroupKey                   | Key to group data for rows                                                                                                                                                                                                               |                                  |\n| vGroupKeys                  | Grouping keys for rows (if not passed, the keys will be determined out of the items)Caution: If you don't pass any headings manually, only the rows are shown, which have data.If you want to show emtpy rows, please set them       | Array                    |\n| backlogName                 | Name of the backlog row                                                                                                                                                                                                                  |                                  |\n| actionsTemplate             | Template for actions, add and collapse buttons (see examples)                                                                                                                                                                            | TemplateRef                 |\n\\n\nEvents\n\n\n\n\nDatatypes\nCardItem\nexport interface CardItem {\n    id: number;\n    name: string;\n    status?: string;\n    color?: string;\n    user?: string;\n    priority?: number;\n}ClickEvent\nexport interface ClickEvent {\n  hGroup: string; \n  vGroup: string;\n}Examples\nFollowing soon\nLimitations\n\nScrolling actually not possible\n\nContributing\nInstallation\ngit clone https://github.com/Disane87/ngx-taskboard.git .Since this is a Angular library, you have can't start it as standalone, like a normal Angular application. Instead, you have to build it with ng build . --watch and link it with npm link. The link process creates a symlink to your global npm which you can access from other projects.\nIn your test or real project, you have to add the package, but only with another command npm link @disane/ngx-taskboard --save. This means, you are not obtaining the package from npm, instead you are symlinking it to you global npm which has a reference to the above created link in your project.\nThis is a bit odd, but you can read more about it here.\nIf you have an existing Angular library project with a tets application, you can work here with submoduling in git, instead of a git clone:\ngit submodule add https://github.com/Disane87/ngx-taskboard.git\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n\n               "},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Marco Franke\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxTaskboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxTaskboardModule\n\n\n\ncluster_NgxTaskboardModule_declarations\n\n\n\ncluster_NgxTaskboardModule_exports\n\n\n\n\nBoardComponent\n\nBoardComponent\n\n\n\nNgxTaskboardModule\n\nNgxTaskboardModule\n\nNgxTaskboardModule -->\n\nBoardComponent->NgxTaskboardModule\n\n\n\n\n\nBoardComponent \n\nBoardComponent \n\nBoardComponent  -->\n\nNgxTaskboardModule->BoardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
